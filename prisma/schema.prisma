generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  emailVerified Boolean @default(false)
  name          String? @db.Text
  imageUrl      String  @db.Text
  email         String  @db.Text
  password      String  @db.Text

  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  GENERAL
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GENERAL)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  messages Message[]

  conversations Conversation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Message {
  id      String @id @default(uuid())
  content String @db.Text

  fileUrl        String?      @db.Text
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  memberId       String
  member         Member       @relation(fields: [memberId], references: [id], onDelete: Cascade)

  deleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([memberId])
}

model Conversation {
  id String @id @default(uuid())

  members Member[]

  messages Message[]
}
